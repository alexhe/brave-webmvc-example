<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd">

  <!-- allows us to read the service name from spring config -->
  <context:property-placeholder/>

  <bean id="destination" class="org.apache.activemq.command.ActiveMQQueue">
    <!-- Tricky! the frontend places a message in the queue "backend".
         This variable prevents the frontend from consuming the backend queue. -->
    <constructor-arg value="${zipkin.service}"/>
  </bean>

  <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
    <property name="connectionFactory" ref="connectionFactory"/>
  </bean>

  <bean id="listenerContainer"
      class="org.springframework.jms.listener.SimpleMessageListenerContainer">
    <property name="connectionFactory" ref="connectionFactory"/>
    <property name="concurrency" value="1"/>
    <property name="destination" ref="destination"/>
    <property name="messageListener">
      <bean class="brave.webmvc.Backend"/>
    </property>
  </bean>

  <!-- By wrapping the connection factory, we automatically trace message producers and listeners -->
  <bean id="connectionFactory" factory-bean="jmsTracing" factory-method="connectionFactory">
    <constructor-arg>
      <bean class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="tcp://localhost:61616"/>
      </bean>
    </constructor-arg>
  </bean>

  <!-- adds the class and method name of the MVC controller -->
  <mvc:interceptors>
    <bean class="brave.spring.webmvc.SpanCustomizingHandlerInterceptor"/>
  </mvc:interceptors>

  <!-- Loads the controller -->
  <context:component-scan base-package="brave.webmvc"/>
  <mvc:annotation-driven/>
</beans>
